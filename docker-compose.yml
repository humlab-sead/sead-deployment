version: "3"
services:
  traefik:
    restart: unless-stopped
    image: traefik:v2.7
    ports:
      - "8989:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgresql:
    restart: unless-stopped
    image: mdillon/postgis:11
    ports:
      - "5435:5432"
    volumes:
      - ./postgresql/mounts/pg-data-volume:/var/lib/postgresql/data
      - ./postgresql/mounts/logs:/var/lib/postgresql/data/log

  postgrest:
    depends_on:
      - postgresql
    restart: unless-stopped
    image: postgrest/postgrest:v9.0.0
    ports:
      - "3001:3001"
    environment:
      PGRST_DB_URI: "postgres://postgrest:${POSTGREST_DB_PASSWORD}@postgresql:5432/${DATABASE_NAME}"
      PGRST_DB_SCHEMA: "postgrest_api"
      PGRST_DB_ANON_ROLE: "postgrest_anon"
      PGRST_LOG_LEVEL: "info"
      PGRST_SERVER_HOST: "*"
      PGRST_SERVER_PORT: "3001"
    command: ['postgrest']

  mongodb:
    image: mongo:4.4
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_ROOT_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGODB_ROOT_PASSWORD
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/mounts/mongodb-data-volume:/var/lib/mongodb
      - ./mongodb/mounts/log:/var/log/mongodb
      - ./mongodb/mounts/mongod.conf:/etc/mongod.conf
    #command: ["mongod", "--dbpath", "/var/lib/mongodb", "--logpath", "/var/log/mongodb/mongodb.log", "--config", "/etc/mongod.conf"]
    command: ["mongod", "--auth", "--dbpath", "/var/lib/mongodb", "--bind_ip", "0.0.0.0", "--logpath", "/var/log/mongodb/mongodb.log"]

  mongo-express:
    image: mongo-express
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: $MONGO_EXPRESS_USER
      ME_CONFIG_BASICAUTH_PASSWORD: $MONGO_EXPRESS_PASSWORD
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGODB_ROOT_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGODB_ROOT_PASSWORD
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      #ME_CONFIG_SITE_BASEURL: '/mongo-express/'
    ports:
      - "4101:8081"

  viewstate_server:
    build: viewstate_server/docker
    depends_on:
      - mongodb
    restart: unless-stopped
    ports:
      - "8081:8081" #Port for regular HTTP (not SSL)
      - "8443:8443" #HTTPS
    volumes:
      - ./certs:/etc/certs
    environment:
      DOMAIN: ${DOMAIN}

  nginx:
    build: ./nginx/docker
    restart: unless-stopped
    ports:
      - "2280:80"
      - "2443:443"
    volumes:
      - ./nginx/mounts/vhosts:/etc/nginx/sites-enabled
      - ./nginx/mounts/logs:/var/log/nginx
      - ./nginx/mounts/logs/letsencrypt.log:/var/log/letsencrypt.log
      - ./nginx/mounts/logs/stats:/var/www/html/stats
      - ./certs:/etc/certs
    environment:
      DOMAIN: ${DOMAIN}

  sead_query_api:
    restart: unless-stopped
    image: sead_query_api:latest
    ports:
      - "8090:8089"
    depends_on:
      - redis_cache
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:8089
    env_file: .env

  redis_cache:
    image: "redis:5-alpine"
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    restart: unless-stopped
    volumes:
      - ./redis/mounts/data:/data/rw
      - ./redis/mounts/log:/var/log

  json_api_server:
    build: ./json_api_server/docker
    restart: unless-stopped
    environment:
      API_PORT: $JAS_API_PORT
      POSTGRES_HOST: $JAS_POSTGRES_HOST
      POSTGRES_PORT: $JAS_POSTGRES_PORT
      POSTGRES_DATABASE: $JAS_POSTGRES_DATABASE
      POSTGRES_USER: $JAS_POSTGRES_USER
      POSTGRES_PASS: $JAS_POSTGRES_PASS
      POSTGRES_MAX_CONNECTIONS: $JAS_POSTGRES_MAX_CONNECTIONS
      MONGO_HOST: $JAS_MONGO_HOST
      MONGO_USER: $JAS_MONGO_USER
      MONGO_PASS: $JAS_MONGO_PASS
      MONGO_DB: $JAS_MONGO_DB
      CACHE_STORAGE_METHOD: $JAS_CACHE_STORAGE_METHOD
      MAX_CONCURRENT_FETCHES: $JAS_MAX_CONCURRENT_FETCHES
      USE_SITE_CACHE: $JAS_USE_SITE_CACHE
      USE_TAXA_CACHE: $JAS_USE_TAXA_CACHE
      USE_ECOCODE_CACHE: $JAS_USE_ECOCODE_CACHE
      USE_QUERY_CACHE: $JAS_USE_QUERY_CACHE
      USE_SINGLE_PERSISTENT_DBCON: $JAS_USE_SINGLE_PERSISTENT_DBCON
    depends_on:
      - mongodb
      - postgresql
    ports:
      - "8484:8484"
    volumes:
      #- "./json_api_server/mounts/.env:/seaddataserver/.env"
      #- "./json_api_server/mounts/app/sead_json_server:/sead_json_server"
      - "./json_api_server/mounts/site_cache:/sead_json_server/site_cache"
      - "./json_api_server/mounts/taxa_cache:/sead_json_server/taxa_cache"
      - "./json_api_server/mounts/query_cache:/sead_json_server/query_cache"

#  keycloak:
#    image: jboss/keycloak:11.0.3
#    depends_on:
#      - keycloak_database
#    ports:
#      - "8585:8080"
#    environment:
#      KEYCLOAK_USER: $KEYCLOAK_USER
#      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
#      KEYCLOAK_FRONTEND_URL: "https://idp.$DOMAIN/auth/"
#      DB_VENDOR: "postgres"
#      DB_ADDR: "keycloak_database"
#      DB_USER: "keycloak"
#      DB_PASSWORD: $KEYCLOAK_POSTGRES_PASSWORD
#      KEYCLOAK_LOGLEVEL: "INFO"
#      ROOT_LOGLEVEL: "INFO"
#      PROXY_ADDRESS_FORWARDING: "true"

#  keycloak_database:
#    image: postgres:12.10
#    environment:
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: $KEYCLOAK_POSTGRES_PASSWORD
#      POSTGRES_DB: keycloak
#      PGDATA: '/pgdata/data'
#    volumes:
#      - "./mounts/keycloak_postgresql/data:/pgdata"


